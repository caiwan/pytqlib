version: "3.2"
services:

  redis:
    image: "redis:6.0-alpine"
    command: redis-server
    volumes:
      - redis-data:/var/lib/redis
      # - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "ping"]
      interval: 2s
      timeout: 1m30s
      retries: 5
      # start_period: 5

  redis-insgiht:
    image: "redislabs/redisinsight:latest"
    volumes:
      - redisinsight:/db
    ports:
      - 8001:8001
    networks:
      - redis

  mongo:
    image: "mongo:5.0.17"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
      MONGO_INITDB_DATABASE: test
    volumes:
      - mongo-data:/data/db
      # - ./docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017
    networks:
      - mongo
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: toor
      ME_CONFIG_MONGODB_URL: mongodb://root:toor@mongo:27017/
    networks:
      - mongo

volumes:
  redis-data:
  redisinsight:
  mongo-data:

networks:
  redis:
  mongo:
